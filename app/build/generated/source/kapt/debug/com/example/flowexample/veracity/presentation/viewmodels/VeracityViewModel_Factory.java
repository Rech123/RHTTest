// Generated by Dagger (https://dagger.dev).
package com.example.flowexample.veracity.presentation.viewmodels;

import com.example.flowexample.veracity.data.CurrencyRepostiory;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VeracityViewModel_Factory implements Factory<VeracityViewModel> {
  private final Provider<CurrencyRepostiory> currencyRepostioryProvider;

  public VeracityViewModel_Factory(Provider<CurrencyRepostiory> currencyRepostioryProvider) {
    this.currencyRepostioryProvider = currencyRepostioryProvider;
  }

  @Override
  public VeracityViewModel get() {
    return newInstance(currencyRepostioryProvider.get());
  }

  public static VeracityViewModel_Factory create(
      Provider<CurrencyRepostiory> currencyRepostioryProvider) {
    return new VeracityViewModel_Factory(currencyRepostioryProvider);
  }

  public static VeracityViewModel newInstance(CurrencyRepostiory currencyRepostiory) {
    return new VeracityViewModel(currencyRepostiory);
  }
}
