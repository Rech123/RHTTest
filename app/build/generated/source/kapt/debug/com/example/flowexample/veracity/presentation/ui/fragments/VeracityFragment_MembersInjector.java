// Generated by Dagger (https://dagger.dev).
package com.example.flowexample.veracity.presentation.ui.fragments;

import com.example.flowexample.core.di.modules.ViewModelInjection;
import com.example.flowexample.veracity.presentation.viewmodels.VeracityViewModel;
import dagger.Lazy;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VeracityFragment_MembersInjector implements MembersInjector<VeracityFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<VeracityViewModel> viewModelProvider;

  public VeracityFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<VeracityViewModel> viewModelProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<VeracityFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<VeracityViewModel> viewModelProvider) {
    return new VeracityFragment_MembersInjector(androidInjectorProvider, viewModelProvider);
  }

  @Override
  public void injectMembers(VeracityFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectViewModel(instance, DoubleCheck.lazy(viewModelProvider));
  }

  @InjectedFieldSignature("com.example.flowexample.veracity.presentation.ui.fragments.VeracityFragment.viewModel")
  @ViewModelInjection
  public static void injectViewModel(VeracityFragment instance, Lazy<VeracityViewModel> viewModel) {
    instance.viewModel = viewModel;
  }
}
