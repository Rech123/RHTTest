// Generated by Dagger (https://dagger.dev).
package com.example.flowexample.veracity.di;

import com.example.flowexample.core.api.RestWebService;
import com.example.flowexample.veracity.data.CurrencyRepostiory;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VeracityModule_ProvidesCurrencyRepostioryFactory implements Factory<CurrencyRepostiory> {
  private final VeracityModule module;

  private final Provider<RestWebService> restWebServiceProvider;

  public VeracityModule_ProvidesCurrencyRepostioryFactory(VeracityModule module,
      Provider<RestWebService> restWebServiceProvider) {
    this.module = module;
    this.restWebServiceProvider = restWebServiceProvider;
  }

  @Override
  public CurrencyRepostiory get() {
    return providesCurrencyRepostiory(module, restWebServiceProvider.get());
  }

  public static VeracityModule_ProvidesCurrencyRepostioryFactory create(VeracityModule module,
      Provider<RestWebService> restWebServiceProvider) {
    return new VeracityModule_ProvidesCurrencyRepostioryFactory(module, restWebServiceProvider);
  }

  public static CurrencyRepostiory providesCurrencyRepostiory(VeracityModule instance,
      RestWebService restWebService) {
    return Preconditions.checkNotNullFromProvides(instance.providesCurrencyRepostiory(restWebService));
  }
}
