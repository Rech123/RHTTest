// Generated by Dagger (https://dagger.dev).
package com.example.flowexample.core.di.modules;

import androidx.lifecycle.ViewModel;
import dagger.Lazy;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class InjectionViewModelProvider_Factory<VM extends ViewModel> implements Factory<InjectionViewModelProvider<VM>> {
  private final Provider<VM> viewModelProvider;

  public InjectionViewModelProvider_Factory(Provider<VM> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  @Override
  public InjectionViewModelProvider<VM> get() {
    return newInstance(DoubleCheck.lazy(viewModelProvider));
  }

  public static <VM extends ViewModel> InjectionViewModelProvider_Factory<VM> create(
      Provider<VM> viewModelProvider) {
    return new InjectionViewModelProvider_Factory<VM>(viewModelProvider);
  }

  public static <VM extends ViewModel> InjectionViewModelProvider<VM> newInstance(
      Lazy<VM> lazyViewModel) {
    return new InjectionViewModelProvider<VM>(lazyViewModel);
  }
}
